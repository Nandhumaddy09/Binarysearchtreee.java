//package binary;
 class Node{
    Node left,right;
    int data;
    public Node(int data){
        this.data=data;
        left=right=null;

    }
}

public class Binarysearchtree1 {
    Node root;
    public Binarysearchtree1(){
        root=null;
    }
    void insert(int data){
        root=insertrecursive(root,data);

    }
    Node insertrecursive(Node root,int data){
        if(root==null){
            
            root=new Node(data);
            return root;
        }
        if(data<root.data){
            root.left=insertrecursive(root.left,data);
        }
        else if(data>root.data){
            root.right=insertrecursive(root.right,data);
        }
        return root;
    
    }
    void preorder(Node root){
        if(root!=null){
            System.out.println(root.data+" ");
            preorder(root.left);
            preorder(root.right);


        }

    }
    void postorder(Node root){
        if(root!=null){
           postorder(root.left);
            postorder(root.right);
             System.out.println(root.data+" ");


        }

    }
    public static void main(String[] args){
        Binarysearchtree1 bst=new Binarysearchtree1();
        bst.insert(5);
        bst.insert(3);
        bst.insert(8);
        bst.insert(2);
        bst.insert(4);
        bst.insert(7);
        bst.insert(9);
       // bst.preorder(bst.root);
        bst.postorder(bst.root);
       // preorder 5,3,2,4,8,7,9
       //Postorder traversal: 2, 4, 3, 7, 9, 8, 5






    }
    
}
